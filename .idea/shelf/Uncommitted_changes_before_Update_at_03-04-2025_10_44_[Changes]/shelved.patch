Index: app/src/main/java/com/sharanya/mmm/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sharanya.mmm\r\n\r\nimport android.app.Dialog\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.GridView\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.activity.result.ActivityResultLauncher\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.fragment.app.Fragment\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\n\r\nclass ProfileFragment : Fragment() {\r\n\r\n    private lateinit var profileImage: ImageView\r\n    private lateinit var cameraIcon: ImageView\r\n    private lateinit var editProfileButton: Button\r\n    private lateinit var setAvatar: TextView\r\n    private lateinit var tvname:TextView\r\n    private lateinit var tvemail:TextView\r\n    private lateinit var changePasswordButton:Button\r\n\r\n    private lateinit var tvage:TextView\r\n    private lateinit var tvgender:TextView\r\n    private lateinit var tvbio:TextView\r\n\r\n    private var profileAvatar:Int=-1\r\n\r\n\r\n\r\n\r\n    private lateinit var pickImageLauncher: ActivityResultLauncher<Intent>\r\n\r\n    private val avatarList = arrayOf(\r\n        R.drawable.avatar1, R.drawable.avatar2, R.drawable.avatar3,\r\n        R.drawable.avatar4, R.drawable.avatar5, R.drawable.avatar6\r\n    )\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        val view= inflater.inflate(R.layout.fragment_profile, container, false)\r\n        tvname=view.findViewById(R.id.userName)\r\n        tvemail=view.findViewById(R.id.usermail)\r\n        val userid=getUserId()\r\n        tvname.text=getUserName()\r\n        tvemail.text=getUserEmail()\r\n\r\n        profileImage = view.findViewById(R.id.profileImage)\r\n        cameraIcon = view.findViewById(R.id.cameraIcon)\r\n        setAvatar = view.findViewById(R.id.setAvatar)\r\n        editProfileButton = view.findViewById(R.id.editProfileButton)\r\n\r\n        tvage=view.findViewById(R.id.userAge)\r\n        tvgender=view.findViewById(R.id.userGender)\r\n        tvbio=view.findViewById(R.id.userBio)\r\n\r\n        changePasswordButton = view.findViewById(R.id.changePasswordButton)\r\n\r\n        changePasswordButton.setOnClickListener {\r\n            val updatepasswordview=LayoutInflater.from(requireContext()).inflate(R.layout.changepasswordfield,null)\r\n            AlertDialog.Builder(requireContext())\r\n                .setView(updatepasswordview)\r\n                .setPositiveButton(\"Update\"){_,_->\r\n                    val newpassword=updatepasswordview.findViewById<TextView>(R.id.newPass).text.toString()\r\n                    val confirmnewpassword=updatepasswordview.findViewById<TextView>(R.id.confirmNewPass).text.toString()\r\n                    if(newpassword!=confirmnewpassword){\r\n                        Toast.makeText(requireContext(),\"Passwords do not match\",Toast.LENGTH_SHORT).show()\r\n                    }\r\n                    else{\r\n                        updatePassword(userid,newpassword)\r\n                    }\r\n                }\r\n                .setNegativeButton(\"Cancel\"){_,_->}\r\n                .create()\r\n                .show()\r\n        }\r\n\r\n\r\n        // Set Click Listener\r\n        editProfileButton.setOnClickListener {\r\n            val intent = Intent(requireContext(), EditProfileDetails::class.java)\r\n            intent.putExtra(\"profileAvatar\", profileAvatar)\r\n            startActivity(intent)\r\n\r\n            val userId = getUserId()\r\n            fetchProfileDetails(userId)\r\n        }\r\n\r\n        // Image Picker for Camera Icon\r\n        pickImageLauncher = registerForActivityResult(\r\n            ActivityResultContracts.StartActivityForResult()\r\n        ) { result ->\r\n            if (result.resultCode == Activity.RESULT_OK) {\r\n                val data: Intent? = result.data\r\n                val imageUri: Uri? = data?.data\r\n                profileImage.setImageURI(imageUri)\r\n            }\r\n        }\r\n\r\n        cameraIcon.setOnClickListener {\r\n            val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)\r\n            pickImageLauncher.launch(intent)\r\n        }\r\n\r\n        setAvatar.setOnClickListener {\r\n            showAvatarDialog()\r\n        }\r\n\r\n        val userId = getUserId()\r\n        fetchProfileDetails(userId)\r\n\r\n        return view\r\n    }\r\n\r\n    private fun getUserId():Int{\r\n        val sharedPreferences = requireContext().getSharedPreferences(\"UserPrefs\", AppCompatActivity.MODE_PRIVATE)\r\n        val userId = sharedPreferences.getString(\"USER_ID\", null)\r\n        return userId?.toIntOrNull() ?: -1\r\n\r\n    }\r\n\r\n    private fun updatePassword(id:Int,password:String){\r\n        val details= mapOf(\r\n            \"password\" to password,\r\n            \"role\" to \"\",\r\n            \"email\" to \"\",\r\n            \"name\" to \"\"\r\n        )\r\n        val apiservice=RetrofitClient.instance\r\n        val call=apiservice.updateUser(id,details)\r\n        call.enqueue(object : Callback<Unit?> {\r\n            override fun onResponse(call: Call<Unit?>, response: Response<Unit?>) {\r\n                if(response.isSuccessful){\r\n                    Toast.makeText(requireContext(),\"password updated successfully\",Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n\r\n            override fun onFailure(call: Call<Unit?>, t: Throwable) {\r\n                TODO(\"Not yet implemented\")\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun getUserName():String{\r\n        val sharedPreferences = requireContext().getSharedPreferences(\"UserPrefs\", AppCompatActivity.MODE_PRIVATE)\r\n        val userName = sharedPreferences.getString(\"USER_NAME\", null)\r\n        return userName!!\r\n    }\r\n    private fun getUserEmail():String{\r\n        val sharedPreferences = requireContext().getSharedPreferences(\"UserPrefs\", AppCompatActivity.MODE_PRIVATE)\r\n        val userEmail = sharedPreferences.getString(\"USER_EMAIL\", null)\r\n        return userEmail!!\r\n    }\r\n\r\n    private fun showAvatarDialog() {\r\n        val dialog = Dialog(requireContext())\r\n        dialog.setContentView(R.layout.dialog_avatar_selection)\r\n\r\n        val avatarGrid: GridView = dialog.findViewById(R.id.avatarGridView)\r\n        avatarGrid.adapter = AvatarAdapter(requireContext(), avatarList)\r\n\r\n        avatarGrid.setOnItemClickListener { _, _, position, _ ->\r\n            profileImage.setImageResource(avatarList[position])\r\n            profileAvatar=avatarList[position]\r\n            updateavatar(getUserId(),profileAvatar)\r\n            dialog.dismiss()\r\n        }\r\n\r\n        dialog.show()\r\n    }\r\n\r\n    private fun updateavatar(id:Int,avatar:Int){\r\n        val details= mapOf(\r\n            \"bio\" to \"\",\r\n            \"age\" to \"\",\r\n            \"gender\" to \"\",\r\n            \"profileimage\" to avatar.toString()\r\n        )\r\n        val apiservice=RetrofitClient.instance\r\n        val call=apiservice.updateprofile(id,details)\r\n        call.enqueue(object : Callback<Unit?> {\r\n            override fun onResponse(call: Call<Unit?>, response: Response<Unit?>) {\r\n                if(response.isSuccessful){\r\n                    Toast.makeText(requireContext(),\"avatar updated successfully\",Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n            override fun onFailure(call: Call<Unit?>, t: Throwable) {\r\n                TODO(\"Not yet implemented\")\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun fetchProfileDetails(userId: Int) {\r\n        val apiService = RetrofitClient.instance\r\n        val call = apiService.getProfile(userId)\r\n        call.enqueue(object : Callback<responseUser> {\r\n            override fun onResponse(call: Call<responseUser>, response: Response<responseUser>) {\r\n                if (response.isSuccessful && response.body() != null) {\r\n                    val profile = response.body()\r\n                    tvbio.text = profile?.bio ?: \"No bio available\"\r\n                    tvage.text = profile?.age?.toString() ?: \"N/A\"\r\n                    tvgender.text = profile?.gender ?: \"N/A\"\r\n                    if(profile?.profileImage!=null){\r\n                        profileImage.setImageResource(profile.profileImage.toInt())\r\n                    }\r\n                } else {\r\n                    Toast.makeText(requireContext(), \"Failed to fetch profile\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n            override fun onFailure(call: Call<responseUser>, t: Throwable) {\r\n                Toast.makeText(requireContext(), \"Error: ${t.message}\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sharanya/mmm/ProfileFragment.kt b/app/src/main/java/com/sharanya/mmm/ProfileFragment.kt
--- a/app/src/main/java/com/sharanya/mmm/ProfileFragment.kt	(revision fa3ee17064af50b154319bebeac72e666bf3d685)
+++ b/app/src/main/java/com/sharanya/mmm/ProfileFragment.kt	(date 1743655375018)
@@ -33,6 +33,7 @@
     private lateinit var tvname:TextView
     private lateinit var tvemail:TextView
     private lateinit var changePasswordButton:Button
+    private lateinit var deleteAccountButton:Button
 
     private lateinit var tvage:TextView
     private lateinit var tvgender:TextView
@@ -40,9 +41,6 @@
 
     private var profileAvatar:Int=-1
 
-
-
-
     private lateinit var pickImageLauncher: ActivityResultLauncher<Intent>
 
     private val avatarList = arrayOf(
@@ -71,6 +69,7 @@
         tvbio=view.findViewById(R.id.userBio)
 
         changePasswordButton = view.findViewById(R.id.changePasswordButton)
+        deleteAccountButton = view.findViewById(R.id.deleteAccountButton)
 
         changePasswordButton.setOnClickListener {
             val updatepasswordview=LayoutInflater.from(requireContext()).inflate(R.layout.changepasswordfield,null)
@@ -91,6 +90,13 @@
                 .show()
         }
 
+        deleteAccountButton.setOnClickListener {
+            val deleteaccountview=LayoutInflater.from(requireContext()).inflate(R.layout.deleteaccountfield,null)
+            AlertDialog.Builder(requireContext())
+                .setView(deleteaccountview)
+                .setPositiveButton()
+
+        }
 
         // Set Click Listener
         editProfileButton.setOnClickListener {
